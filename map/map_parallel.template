package main

// Generated by @bryandmc/async

func Map{{FunctionArgType}}Parallel(fn func({{FunctionArgType}}) {{FunctionReturnType}}, args ...{{FunctionArgType}}) []{{FunctionReturnType}} {
	var output = make([]{{FunctionReturnType}}, len(args))
	collector := make(chan {{FunctionReturnType}}, len(args))
	for _, v := range args {
		go func(i {{FunctionArgType}}) {
			collector <- fn(i)
		}(v)
	}
	for j := 0; j < len(args); j++ {
		output[j] = <-collector
	}
	return output
}
